NodeJS 노동부 과정 과제

1. NodeJS를 활용한 개발을 위해 개발환경을 설정할 수 있다.
   - NodeJS 설치 후 콘솔에서 간단한 자바스트립트 실행 + Visual Studio Code 설치 후 실행화면 자바스트립트 실행화면

2. NodeJS가 채택한 CommonJS 모듈 시스템을 활용해 자바스크립트 함수를 모듈로 구성하고 이를 다른 스크립트 파일에서 호출할 수 있다. 
   - 콘솔에 "Hello NodeJS" 메시지를 출력하는 sayHello 함수를 만들고 이를 다른 스크립트에서 호출하기.

3. NodeJS 기본 모듈인 Http 모듈을 이용해 서버를 제작하고 원하는 포트(ex: 8000번 포트)를 설정해 클라이언트의 요청에 응답할 수 있다. 
   - 루트(/) 경로에 대한 요청에 응답하는 기본 서버 만들기.

4. HTTP 모듈을 활용해 라우팅을 설정해 요청 경로에 따라 다르게 응답하는 서버를 제작할 수 있다.
   - 기본 경로인 루트(/)와 /start, /show 등의 경로에 따라 다르게 응답하고 대응하지 않는 경로로 요청이 들어온 경우 404 Not found 메시지를 응답한다.

5. HTTP 모듈을 활용해 GET 요청과 POST 요청에 각각 응답하는 서버를 제작할 수 있다.  
   - GET 요청이 오면 이름과 지역을 입력해 Form을 제출할 수 있는 HTML 페이지를 보여주고 이 Form을 제출하면 제출한 정보를 JSON 문자열로 응답하는 서버 제작.

6. HTTP 모듈과 Form으로 전달된 Raw 데이터(ex: 이미지)를 파싱(해석)할 수 있는 적절한 외부 모듈을 활용해 이미지 업로드 기능을 갖춘 서버를 제작할 수 있다.
   - 업로드된 이미지를 처리할 때 Formidable 모듈 등의 외부 모듈을 사용한다.

7. HTTP, Express 모듈을 활용해 이미지 업로드 기능을 갖춘 서버를 제작할 수 있다.
   - 6번과 동일한 기능을 제공하는 서버를 제작하는데 Express 모듈을 사용해 서버를 구성하고 업로드된 이미지를 처리할 때 Formidable 모듈이나 Connect-Multipart 미들웨어를 사용한다.

8. 데이터베이스 시스템인 Mysql을 활용해 클라이언트의 요청에 따라 Mysql에 데이터  추가/조회/갱신/삭제 기능을 갖춘 서버 모듈을 작성할 수 있다.
   - Mysql 모듈과 적절한 쿼리문을 통해 추가/조회/갱신/삭제 기능을 갖춘 예제를 작성한다.

9. NodeJS 기본 모듈 및 외부 모듈을 활용해 사용자 정보를 데이터베이스(Mysql)로 저장하고 이를 기반으로 동작하는 로그인 서버를 제작할 수 있다.